{
  "contractName": "MetadataStorage",
  "abi": [],
  "michelson": "[ { \"prim\": \"parameter\",\n    \"args\":\n      [ { \"prim\": \"or\",\n          \"args\":\n            [ { \"prim\": \"or\",\n                \"args\":\n                  [ { \"prim\": \"contract\",\n                      \"args\":\n                        [ { \"prim\": \"big_map\",\n                            \"args\":\n                              [ { \"prim\": \"string\" }, { \"prim\": \"bytes\" } ] } ],\n                      \"annots\": [ \"%get_metadata\" ] },\n                    { \"prim\": \"pair\",\n                      \"args\":\n                        [ { \"prim\": \"bool\", \"annots\": [ \"%add\" ] },\n                          { \"prim\": \"address\", \"annots\": [ \"%owner\" ] } ],\n                      \"annots\": [ \"%update_owners\" ] } ] },\n              { \"prim\": \"big_map\",\n                \"args\": [ { \"prim\": \"string\" }, { \"prim\": \"bytes\" } ],\n                \"annots\": [ \"%update_storage\" ] } ] } ] },\n  { \"prim\": \"storage\",\n    \"args\":\n      [ { \"prim\": \"pair\",\n          \"args\":\n            [ { \"prim\": \"big_map\",\n                \"args\": [ { \"prim\": \"string\" }, { \"prim\": \"bytes\" } ],\n                \"annots\": [ \"%metadata\" ] },\n              { \"prim\": \"set\", \"args\": [ { \"prim\": \"address\" } ],\n                \"annots\": [ \"%owners\" ] } ] } ] },\n  { \"prim\": \"code\",\n    \"args\":\n      [ [ { \"prim\": \"DUP\" }, { \"prim\": \"CDR\" }, { \"prim\": \"SWAP\" },\n          { \"prim\": \"CAR\" },\n          { \"prim\": \"IF_LEFT\",\n            \"args\":\n              [ [ { \"prim\": \"IF_LEFT\",\n                    \"args\":\n                      [ [ { \"prim\": \"SWAP\" }, { \"prim\": \"DUP\" },\n                          { \"prim\": \"DUG\", \"args\": [ { \"int\": \"2\" } ] },\n                          { \"prim\": \"NIL\",\n                            \"args\": [ { \"prim\": \"operation\" } ] },\n                          { \"prim\": \"DIG\", \"args\": [ { \"int\": \"2\" } ] },\n                          { \"prim\": \"PUSH\",\n                            \"args\": [ { \"prim\": \"mutez\" }, { \"int\": \"0\" } ] },\n                          { \"prim\": \"DIG\", \"args\": [ { \"int\": \"4\" } ] },\n                          { \"prim\": \"CAR\" }, { \"prim\": \"TRANSFER_TOKENS\" },\n                          { \"prim\": \"CONS\" }, { \"prim\": \"PAIR\" } ],\n                        [ { \"prim\": \"SWAP\" }, { \"prim\": \"DUP\" },\n                          { \"prim\": \"DUG\", \"args\": [ { \"int\": \"2\" } ] },\n                          { \"prim\": \"CDR\" }, { \"prim\": \"SENDER\" },\n                          { \"prim\": \"MEM\" },\n                          { \"prim\": \"IF\",\n                            \"args\":\n                              [ [],\n                                [ { \"prim\": \"PUSH\",\n                                    \"args\":\n                                      [ { \"prim\": \"string\" },\n                                        { \"string\":\n                                            \"MetadataStorage/permision-denied\" } ] },\n                                  { \"prim\": \"FAILWITH\" } ] ] },\n                          { \"prim\": \"DUP\" }, { \"prim\": \"CAR\" },\n                          { \"prim\": \"IF\",\n                            \"args\":\n                              [ [ { \"prim\": \"SWAP\" }, { \"prim\": \"DUP\" },\n                                  { \"prim\": \"DUG\",\n                                    \"args\": [ { \"int\": \"2\" } ] },\n                                  { \"prim\": \"CDR\" }, { \"prim\": \"SWAP\" },\n                                  { \"prim\": \"CDR\" },\n                                  { \"prim\": \"PUSH\",\n                                    \"args\":\n                                      [ { \"prim\": \"bool\" },\n                                        { \"prim\": \"True\" } ] },\n                                  { \"prim\": \"SWAP\" }, { \"prim\": \"UPDATE\" },\n                                  { \"prim\": \"SWAP\" }, { \"prim\": \"CAR\" },\n                                  { \"prim\": \"PAIR\" } ],\n                                [ { \"prim\": \"SWAP\" }, { \"prim\": \"DUP\" },\n                                  { \"prim\": \"DUG\",\n                                    \"args\": [ { \"int\": \"2\" } ] },\n                                  { \"prim\": \"CDR\" }, { \"prim\": \"SWAP\" },\n                                  { \"prim\": \"CDR\" },\n                                  { \"prim\": \"PUSH\",\n                                    \"args\":\n                                      [ { \"prim\": \"bool\" },\n                                        { \"prim\": \"False\" } ] },\n                                  { \"prim\": \"SWAP\" }, { \"prim\": \"UPDATE\" },\n                                  { \"prim\": \"SWAP\" }, { \"prim\": \"CAR\" },\n                                  { \"prim\": \"PAIR\" } ] ] },\n                          { \"prim\": \"NIL\",\n                            \"args\": [ { \"prim\": \"operation\" } ] },\n                          { \"prim\": \"PAIR\" } ] ] } ],\n                [ { \"prim\": \"SWAP\" }, { \"prim\": \"DUP\" },\n                  { \"prim\": \"DUG\", \"args\": [ { \"int\": \"2\" } ] },\n                  { \"prim\": \"CDR\" }, { \"prim\": \"SENDER\" }, { \"prim\": \"MEM\" },\n                  { \"prim\": \"IF\",\n                    \"args\":\n                      [ [],\n                        [ { \"prim\": \"PUSH\",\n                            \"args\":\n                              [ { \"prim\": \"string\" },\n                                { \"string\":\n                                    \"MetadataStorage/permision-denied\" } ] },\n                          { \"prim\": \"FAILWITH\" } ] ] }, { \"prim\": \"SWAP\" },\n                  { \"prim\": \"CDR\" }, { \"prim\": \"SWAP\" }, { \"prim\": \"PAIR\" },\n                  { \"prim\": \"NIL\", \"args\": [ { \"prim\": \"operation\" } ] },\n                  { \"prim\": \"PAIR\" } ] ] } ] ] } ]",
  "source": "#include \"../partials/IMetadataStorage.ligo\"\n\n(* Add or remove the admin permissions for address; only called by one of the current owners *)\nfunction update_owner (const params : update_owner_type; const s : storage) : return is \n  block {\n    if s.owners contains Tezos.sender then\n      skip\n    else failwith(\"MetadataStorage/permision-denied\");\n    if params.add then\n      s.owners := Set.add (params.owner, s.owners)\n    else\n      s.owners := Set.remove (params.owner, s.owners);\n  } with ((nil : list (operation)), s)\n\n(* Update the metadata for the token; only called by one of the current owners *)\nfunction update_metadata (const new_metadata : metadata_type; const s : storage) : return is \n  block {\n    if s.owners contains Tezos.sender then\n      skip\n    else failwith(\"MetadataStorage/permision-denied\");\n    s.metadata := new_metadata;\n  } with ((nil : list (operation)), s)\n\n(* MetadataStorage - Contract to store and upgrade the shares token metadata *)\nfunction main (const p : storage_action; const s : storage) : return is\n  case p of\n    | Update_owners(params)         -> update_owner(params, s)\n    | Update_storage(new_metadata)  -> update_metadata(new_metadata, s)\n    | Get_metadata(receiver)        -> (list [transaction(s.metadata, 0tz, receiver)], s) \n  end\n",
  "sourcePath": "/root/tezos/quipuswap-core/contracts/main/MetadataStorage.ligo",
  "compiler": {
    "name": "ligo",
    "version": "0.9.0"
  },
  "networks": {
    "NetXy4TQfKStove": {
      "events": {},
      "links": {},
      "address": "KT1QTM6ptUuoWv3sQi7KW8mgDs3GbBPvw2qg",
      "transactionHash": "ooAfqqC7qnxSEMoiEF2xXifnrUitAymj8WL7yu3VeS38Z38rXS4"
    }
  },
  "schemaVersion": "3.2.0-tezos.1",
  "updatedAt": "2022-10-06T09:36:30.556Z",
  "networkType": "tezos"
}