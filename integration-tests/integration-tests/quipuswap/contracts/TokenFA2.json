{
  "contractName": "TokenFA2",
  "abi": [],
  "michelson": "[ { \"prim\": \"parameter\",\n    \"args\":\n      [ { \"prim\": \"or\",\n          \"args\":\n            [ { \"prim\": \"or\",\n                \"args\":\n                  [ { \"prim\": \"pair\",\n                      \"args\":\n                        [ { \"prim\": \"list\",\n                            \"args\":\n                              [ { \"prim\": \"pair\",\n                                  \"args\":\n                                    [ { \"prim\": \"address\",\n                                        \"annots\": [ \"%owner\" ] },\n                                      { \"prim\": \"nat\",\n                                        \"annots\": [ \"%token_id\" ] } ] } ],\n                            \"annots\": [ \"%requests\" ] },\n                          { \"prim\": \"contract\",\n                            \"args\":\n                              [ { \"prim\": \"list\",\n                                  \"args\":\n                                    [ { \"prim\": \"pair\",\n                                        \"args\":\n                                          [ { \"prim\": \"pair\",\n                                              \"args\":\n                                                [ { \"prim\": \"address\",\n                                                    \"annots\": [ \"%owner\" ] },\n                                                  { \"prim\": \"nat\",\n                                                    \"annots\": [ \"%token_id\" ] } ],\n                                              \"annots\": [ \"%request\" ] },\n                                            { \"prim\": \"nat\",\n                                              \"annots\": [ \"%balance\" ] } ] } ] } ],\n                            \"annots\": [ \"%callback\" ] } ],\n                      \"annots\": [ \"%balance_of\" ] },\n                    { \"prim\": \"list\",\n                      \"args\":\n                        [ { \"prim\": \"pair\",\n                            \"args\":\n                              [ { \"prim\": \"address\", \"annots\": [ \"%from_\" ] },\n                                { \"prim\": \"list\",\n                                  \"args\":\n                                    [ { \"prim\": \"pair\",\n                                        \"args\":\n                                          [ { \"prim\": \"address\",\n                                              \"annots\": [ \"%to_\" ] },\n                                            { \"prim\": \"pair\",\n                                              \"args\":\n                                                [ { \"prim\": \"nat\",\n                                                    \"annots\": [ \"%token_id\" ] },\n                                                  { \"prim\": \"nat\",\n                                                    \"annots\": [ \"%amount\" ] } ] } ] } ],\n                                  \"annots\": [ \"%txs\" ] } ] } ],\n                      \"annots\": [ \"%transfer\" ] } ] },\n              { \"prim\": \"list\",\n                \"args\":\n                  [ { \"prim\": \"or\",\n                      \"args\":\n                        [ { \"prim\": \"pair\",\n                            \"args\":\n                              [ { \"prim\": \"address\", \"annots\": [ \"%owner\" ] },\n                                { \"prim\": \"pair\",\n                                  \"args\":\n                                    [ { \"prim\": \"address\",\n                                        \"annots\": [ \"%operator\" ] },\n                                      { \"prim\": \"nat\",\n                                        \"annots\": [ \"%token_id\" ] } ] } ],\n                            \"annots\": [ \"%add_operator\" ] },\n                          { \"prim\": \"pair\",\n                            \"args\":\n                              [ { \"prim\": \"address\", \"annots\": [ \"%owner\" ] },\n                                { \"prim\": \"pair\",\n                                  \"args\":\n                                    [ { \"prim\": \"address\",\n                                        \"annots\": [ \"%operator\" ] },\n                                      { \"prim\": \"nat\",\n                                        \"annots\": [ \"%token_id\" ] } ] } ],\n                            \"annots\": [ \"%remove_operator\" ] } ] } ],\n                \"annots\": [ \"%update_operators\" ] } ] } ] },\n  { \"prim\": \"storage\",\n    \"args\":\n      [ { \"prim\": \"pair\",\n          \"args\":\n            [ { \"prim\": \"pair\",\n                \"args\":\n                  [ { \"prim\": \"big_map\",\n                      \"args\":\n                        [ { \"prim\": \"address\" },\n                          { \"prim\": \"pair\",\n                            \"args\":\n                              [ { \"prim\": \"set\",\n                                  \"args\": [ { \"prim\": \"address\" } ],\n                                  \"annots\": [ \"%allowances\" ] },\n                                { \"prim\": \"nat\", \"annots\": [ \"%balance\" ] } ] } ],\n                      \"annots\": [ \"%ledger\" ] },\n                    { \"prim\": \"big_map\",\n                      \"args\": [ { \"prim\": \"string\" }, { \"prim\": \"bytes\" } ],\n                      \"annots\": [ \"%metadata\" ] } ] },\n              { \"prim\": \"pair\",\n                \"args\":\n                  [ { \"prim\": \"big_map\",\n                      \"args\":\n                        [ { \"prim\": \"nat\" },\n                          { \"prim\": \"pair\",\n                            \"args\":\n                              [ { \"prim\": \"map\",\n                                  \"args\":\n                                    [ { \"prim\": \"string\" },\n                                      { \"prim\": \"bytes\" } ],\n                                  \"annots\": [ \"%extras\" ] },\n                                { \"prim\": \"nat\", \"annots\": [ \"%token_id\" ] } ] } ],\n                      \"annots\": [ \"%token_metadata\" ] },\n                    { \"prim\": \"nat\", \"annots\": [ \"%total_supply\" ] } ] } ] } ] },\n  { \"prim\": \"code\",\n    \"args\":\n      [ [ { \"prim\": \"PUSH\", \"args\": [ { \"prim\": \"nat\" }, { \"int\": \"0\" } ] },\n          { \"prim\": \"LAMBDA\",\n            \"args\":\n              [ { \"prim\": \"pair\",\n                  \"args\":\n                    [ { \"prim\": \"address\" },\n                      { \"prim\": \"pair\",\n                        \"args\":\n                          [ { \"prim\": \"pair\",\n                              \"args\":\n                                [ { \"prim\": \"big_map\",\n                                    \"args\":\n                                      [ { \"prim\": \"address\" },\n                                        { \"prim\": \"pair\",\n                                          \"args\":\n                                            [ { \"prim\": \"set\",\n                                                \"args\":\n                                                  [ { \"prim\": \"address\" } ] },\n                                              { \"prim\": \"nat\" } ] } ] },\n                                  { \"prim\": \"big_map\",\n                                    \"args\":\n                                      [ { \"prim\": \"string\" },\n                                        { \"prim\": \"bytes\" } ] } ] },\n                            { \"prim\": \"pair\",\n                              \"args\":\n                                [ { \"prim\": \"big_map\",\n                                    \"args\":\n                                      [ { \"prim\": \"nat\" },\n                                        { \"prim\": \"pair\",\n                                          \"args\":\n                                            [ { \"prim\": \"map\",\n                                                \"args\":\n                                                  [ { \"prim\": \"string\" },\n                                                    { \"prim\": \"bytes\" } ] },\n                                              { \"prim\": \"nat\" } ] } ] },\n                                  { \"prim\": \"nat\" } ] } ] } ] },\n                { \"prim\": \"pair\",\n                  \"args\":\n                    [ { \"prim\": \"set\", \"args\": [ { \"prim\": \"address\" } ] },\n                      { \"prim\": \"nat\" } ] },\n                [ { \"prim\": \"DUP\" }, { \"prim\": \"CDR\" }, { \"prim\": \"SWAP\" },\n                  { \"prim\": \"CAR\" }, { \"prim\": \"SWAP\" }, { \"prim\": \"CAR\" },\n                  { \"prim\": \"CAR\" }, { \"prim\": \"SWAP\" }, { \"prim\": \"GET\" },\n                  { \"prim\": \"IF_NONE\",\n                    \"args\":\n                      [ [ { \"prim\": \"PUSH\",\n                            \"args\": [ { \"prim\": \"nat\" }, { \"int\": \"0\" } ] },\n                          { \"prim\": \"EMPTY_SET\",\n                            \"args\": [ { \"prim\": \"address\" } ] },\n                          { \"prim\": \"PAIR\" } ], [] ] } ] ] },\n          { \"prim\": \"DIG\", \"args\": [ { \"int\": \"2\" } ] }, { \"prim\": \"DUP\" },\n          { \"prim\": \"CDR\" }, { \"prim\": \"SWAP\" }, { \"prim\": \"CAR\" },\n          { \"prim\": \"IF_LEFT\",\n            \"args\":\n              [ [ { \"prim\": \"IF_LEFT\",\n                    \"args\":\n                      [ [ { \"prim\": \"SWAP\" }, { \"prim\": \"DUP\" },\n                          { \"prim\": \"DIG\", \"args\": [ { \"int\": \"2\" } ] },\n                          { \"prim\": \"NIL\",\n                            \"args\":\n                              [ { \"prim\": \"pair\",\n                                  \"args\":\n                                    [ { \"prim\": \"pair\",\n                                        \"args\":\n                                          [ { \"prim\": \"address\" },\n                                            { \"prim\": \"nat\" } ] },\n                                      { \"prim\": \"nat\" } ] } ] },\n                          { \"prim\": \"SWAP\" }, { \"prim\": \"DUP\" },\n                          { \"prim\": \"DUG\", \"args\": [ { \"int\": \"2\" } ] },\n                          { \"prim\": \"CAR\" },\n                          { \"prim\": \"ITER\",\n                            \"args\":\n                              [ [ { \"prim\": \"DUP\" },\n                                  { \"prim\": \"DUG\",\n                                    \"args\": [ { \"int\": \"2\" } ] },\n                                  { \"prim\": \"CDR\" },\n                                  { \"prim\": \"DIG\",\n                                    \"args\": [ { \"int\": \"7\" } ] },\n                                  { \"prim\": \"DUP\" },\n                                  { \"prim\": \"DUG\",\n                                    \"args\": [ { \"int\": \"8\" } ] },\n                                  { \"prim\": \"COMPARE\" }, { \"prim\": \"NEQ\" },\n                                  { \"prim\": \"IF\",\n                                    \"args\":\n                                      [ [ { \"prim\": \"PUSH\",\n                                            \"args\":\n                                              [ { \"prim\": \"string\" },\n                                                { \"string\":\n                                                    \"FA2_TOKEN_UNDEFINED\" } ] },\n                                          { \"prim\": \"FAILWITH\" } ], [] ] },\n                                  { \"prim\": \"DIG\",\n                                    \"args\": [ { \"int\": \"3\" } ] },\n                                  { \"prim\": \"DUP\" },\n                                  { \"prim\": \"DUG\",\n                                    \"args\": [ { \"int\": \"4\" } ] },\n                                  { \"prim\": \"DIG\",\n                                    \"args\": [ { \"int\": \"2\" } ] },\n                                  { \"prim\": \"DUP\" },\n                                  { \"prim\": \"DUG\",\n                                    \"args\": [ { \"int\": \"3\" } ] },\n                                  { \"prim\": \"CAR\" }, { \"prim\": \"PAIR\" },\n                                  { \"prim\": \"DIG\",\n                                    \"args\": [ { \"int\": \"6\" } ] },\n                                  { \"prim\": \"DUP\" },\n                                  { \"prim\": \"DUG\",\n                                    \"args\": [ { \"int\": \"7\" } ] },\n                                  { \"prim\": \"SWAP\" }, { \"prim\": \"EXEC\" },\n                                  { \"prim\": \"CDR\" },\n                                  { \"prim\": \"DIG\",\n                                    \"args\": [ { \"int\": \"2\" } ] },\n                                  { \"prim\": \"PAIR\" }, { \"prim\": \"CONS\" } ] ] },\n                          { \"prim\": \"DIG\", \"args\": [ { \"int\": \"2\" } ] },\n                          { \"prim\": \"DROP\" },\n                          { \"prim\": \"DIG\", \"args\": [ { \"int\": \"3\" } ] },\n                          { \"prim\": \"DROP\" },\n                          { \"prim\": \"DIG\", \"args\": [ { \"int\": \"3\" } ] },\n                          { \"prim\": \"DROP\" },\n                          { \"prim\": \"NIL\",\n                            \"args\": [ { \"prim\": \"operation\" } ] },\n                          { \"prim\": \"DIG\", \"args\": [ { \"int\": \"2\" } ] },\n                          { \"prim\": \"CDR\" },\n                          { \"prim\": \"PUSH\",\n                            \"args\": [ { \"prim\": \"mutez\" }, { \"int\": \"0\" } ] },\n                          { \"prim\": \"DIG\", \"args\": [ { \"int\": \"3\" } ] },\n                          { \"prim\": \"TRANSFER_TOKENS\" }, { \"prim\": \"CONS\" },\n                          { \"prim\": \"PAIR\" } ],\n                        [ { \"prim\": \"ITER\",\n                            \"args\":\n                              [ [ { \"prim\": \"SWAP\" }, { \"prim\": \"DUP\" },\n                                  { \"prim\": \"DIG\",\n                                    \"args\": [ { \"int\": \"2\" } ] },\n                                  { \"prim\": \"DUP\" },\n                                  { \"prim\": \"DUG\",\n                                    \"args\": [ { \"int\": \"3\" } ] },\n                                  { \"prim\": \"CAR\" }, { \"prim\": \"PAIR\" },\n                                  { \"prim\": \"DIG\",\n                                    \"args\": [ { \"int\": \"3\" } ] },\n                                  { \"prim\": \"DUP\" },\n                                  { \"prim\": \"DUG\",\n                                    \"args\": [ { \"int\": \"4\" } ] },\n                                  { \"prim\": \"SWAP\" }, { \"prim\": \"EXEC\" },\n                                  { \"prim\": \"DUP\" }, { \"prim\": \"CAR\" },\n                                  { \"prim\": \"SENDER\" }, { \"prim\": \"MEM\" },\n                                  { \"prim\": \"SENDER\" },\n                                  { \"prim\": \"DIG\",\n                                    \"args\": [ { \"int\": \"4\" } ] },\n                                  { \"prim\": \"DUP\" },\n                                  { \"prim\": \"DUG\",\n                                    \"args\": [ { \"int\": \"5\" } ] },\n                                  { \"prim\": \"CAR\" }, { \"prim\": \"COMPARE\" },\n                                  { \"prim\": \"EQ\" }, { \"prim\": \"OR\" },\n                                  { \"prim\": \"IF\",\n                                    \"args\":\n                                      [ [],\n                                        [ { \"prim\": \"PUSH\",\n                                            \"args\":\n                                              [ { \"prim\": \"string\" },\n                                                { \"string\":\n                                                    \"FA2_NOT_OPERATOR\" } ] },\n                                          { \"prim\": \"FAILWITH\" } ] ] },\n                                  { \"prim\": \"SWAP\" },\n                                  { \"prim\": \"DIG\",\n                                    \"args\": [ { \"int\": \"2\" } ] },\n                                  { \"prim\": \"DUP\" },\n                                  { \"prim\": \"DUG\",\n                                    \"args\": [ { \"int\": \"3\" } ] },\n                                  { \"prim\": \"CDR\" },\n                                  { \"prim\": \"ITER\",\n                                    \"args\":\n                                      [ [ { \"prim\": \"DUP\" },\n                                          { \"prim\": \"DUG\",\n                                            \"args\": [ { \"int\": \"2\" } ] },\n                                          { \"prim\": \"CDR\" },\n                                          { \"prim\": \"CAR\" },\n                                          { \"prim\": \"DIG\",\n                                            \"args\": [ { \"int\": \"6\" } ] },\n                                          { \"prim\": \"DUP\" },\n                                          { \"prim\": \"DUG\",\n                                            \"args\": [ { \"int\": \"7\" } ] },\n                                          { \"prim\": \"COMPARE\" },\n                                          { \"prim\": \"NEQ\" },\n                                          { \"prim\": \"IF\",\n                                            \"args\":\n                                              [ [ { \"prim\": \"PUSH\",\n                                                    \"args\":\n                                                      [ { \"prim\": \"string\" },\n                                                        { \"string\":\n                                                            \"FA2_TOKEN_UNDEFINED\" } ] },\n                                                  { \"prim\": \"FAILWITH\" } ],\n                                                [] ] }, { \"prim\": \"SWAP\" },\n                                          { \"prim\": \"DUP\" },\n                                          { \"prim\": \"DUG\",\n                                            \"args\": [ { \"int\": \"2\" } ] },\n                                          { \"prim\": \"CDR\" },\n                                          { \"prim\": \"CDR\" },\n                                          { \"prim\": \"DIG\",\n                                            \"args\": [ { \"int\": \"3\" } ] },\n                                          { \"prim\": \"DUP\" },\n                                          { \"prim\": \"DUG\",\n                                            \"args\": [ { \"int\": \"4\" } ] },\n                                          { \"prim\": \"CDR\" },\n                                          { \"prim\": \"COMPARE\" },\n                                          { \"prim\": \"LT\" },\n                                          { \"prim\": \"IF\",\n                                            \"args\":\n                                              [ [ { \"prim\": \"PUSH\",\n                                                    \"args\":\n                                                      [ { \"prim\": \"string\" },\n                                                        { \"string\":\n                                                            \"FA2_INSUFFICIENT_BALANCE\" } ] },\n                                                  { \"prim\": \"FAILWITH\" } ],\n                                                [] ] }, { \"prim\": \"SWAP\" },\n                                          { \"prim\": \"DUP\" },\n                                          { \"prim\": \"DUG\",\n                                            \"args\": [ { \"int\": \"2\" } ] },\n                                          { \"prim\": \"CDR\" },\n                                          { \"prim\": \"CDR\" },\n                                          { \"prim\": \"DIG\",\n                                            \"args\": [ { \"int\": \"3\" } ] },\n                                          { \"prim\": \"DUP\" },\n                                          { \"prim\": \"DUG\",\n                                            \"args\": [ { \"int\": \"4\" } ] },\n                                          { \"prim\": \"CDR\" },\n                                          { \"prim\": \"SUB\" },\n                                          { \"prim\": \"ABS\" },\n                                          { \"prim\": \"DIG\",\n                                            \"args\": [ { \"int\": \"3\" } ] },\n                                          { \"prim\": \"DUP\" },\n                                          { \"prim\": \"DUG\",\n                                            \"args\": [ { \"int\": \"4\" } ] },\n                                          { \"prim\": \"CAR\" },\n                                          { \"prim\": \"PAIR\" },\n                                          { \"prim\": \"SWAP\" },\n                                          { \"prim\": \"DUP\" },\n                                          { \"prim\": \"DUG\",\n                                            \"args\": [ { \"int\": \"2\" } ] },\n                                          { \"prim\": \"CDR\" },\n                                          { \"prim\": \"DIG\",\n                                            \"args\": [ { \"int\": \"2\" } ] },\n                                          { \"prim\": \"DUP\" },\n                                          { \"prim\": \"DUG\",\n                                            \"args\": [ { \"int\": \"3\" } ] },\n                                          { \"prim\": \"CAR\" },\n                                          { \"prim\": \"CDR\" },\n                                          { \"prim\": \"DIG\",\n                                            \"args\": [ { \"int\": \"3\" } ] },\n                                          { \"prim\": \"CAR\" },\n                                          { \"prim\": \"CAR\" },\n                                          { \"prim\": \"DIG\",\n                                            \"args\": [ { \"int\": \"3\" } ] },\n                                          { \"prim\": \"DIG\",\n                                            \"args\": [ { \"int\": \"6\" } ] },\n                                          { \"prim\": \"DUP\" },\n                                          { \"prim\": \"DUG\",\n                                            \"args\": [ { \"int\": \"7\" } ] },\n                                          { \"prim\": \"CAR\" },\n                                          { \"prim\": \"SWAP\" },\n                                          { \"prim\": \"SOME\" },\n                                          { \"prim\": \"SWAP\" },\n                                          { \"prim\": \"UPDATE\" },\n                                          { \"prim\": \"PAIR\" },\n                                          { \"prim\": \"PAIR\" },\n                                          { \"prim\": \"DUP\" },\n                                          { \"prim\": \"DIG\",\n                                            \"args\": [ { \"int\": \"2\" } ] },\n                                          { \"prim\": \"DUP\" },\n                                          { \"prim\": \"DUG\",\n                                            \"args\": [ { \"int\": \"3\" } ] },\n                                          { \"prim\": \"CAR\" },\n                                          { \"prim\": \"PAIR\" },\n                                          { \"prim\": \"DIG\",\n                                            \"args\": [ { \"int\": \"5\" } ] },\n                                          { \"prim\": \"DUP\" },\n                                          { \"prim\": \"DUG\",\n                                            \"args\": [ { \"int\": \"6\" } ] },\n                                          { \"prim\": \"SWAP\" },\n                                          { \"prim\": \"EXEC\" },\n                                          { \"prim\": \"DIG\",\n                                            \"args\": [ { \"int\": \"2\" } ] },\n                                          { \"prim\": \"DUP\" },\n                                          { \"prim\": \"DUG\",\n                                            \"args\": [ { \"int\": \"3\" } ] },\n                                          { \"prim\": \"CDR\" },\n                                          { \"prim\": \"CDR\" },\n                                          { \"prim\": \"SWAP\" },\n                                          { \"prim\": \"DUP\" },\n                                          { \"prim\": \"DUG\",\n                                            \"args\": [ { \"int\": \"2\" } ] },\n                                          { \"prim\": \"CDR\" },\n                                          { \"prim\": \"ADD\" },\n                                          { \"prim\": \"SWAP\" },\n                                          { \"prim\": \"CAR\" },\n                                          { \"prim\": \"PAIR\" },\n                                          { \"prim\": \"SWAP\" },\n                                          { \"prim\": \"DUP\" },\n                                          { \"prim\": \"DUG\",\n                                            \"args\": [ { \"int\": \"2\" } ] },\n                                          { \"prim\": \"CDR\" },\n                                          { \"prim\": \"DIG\",\n                                            \"args\": [ { \"int\": \"2\" } ] },\n                                          { \"prim\": \"DUP\" },\n                                          { \"prim\": \"DUG\",\n                                            \"args\": [ { \"int\": \"3\" } ] },\n                                          { \"prim\": \"CAR\" },\n                                          { \"prim\": \"CDR\" },\n                                          { \"prim\": \"DIG\",\n                                            \"args\": [ { \"int\": \"3\" } ] },\n                                          { \"prim\": \"CAR\" },\n                                          { \"prim\": \"CAR\" },\n                                          { \"prim\": \"DIG\",\n                                            \"args\": [ { \"int\": \"3\" } ] },\n                                          { \"prim\": \"DIG\",\n                                            \"args\": [ { \"int\": \"4\" } ] },\n                                          { \"prim\": \"CAR\" },\n                                          { \"prim\": \"SWAP\" },\n                                          { \"prim\": \"SOME\" },\n                                          { \"prim\": \"SWAP\" },\n                                          { \"prim\": \"UPDATE\" },\n                                          { \"prim\": \"PAIR\" },\n                                          { \"prim\": \"PAIR\" } ] ] },\n                                  { \"prim\": \"SWAP\" }, { \"prim\": \"DROP\" },\n                                  { \"prim\": \"SWAP\" }, { \"prim\": \"DROP\" } ] ] },\n                          { \"prim\": \"SWAP\" }, { \"prim\": \"DROP\" },\n                          { \"prim\": \"SWAP\" }, { \"prim\": \"DROP\" },\n                          { \"prim\": \"NIL\",\n                            \"args\": [ { \"prim\": \"operation\" } ] },\n                          { \"prim\": \"PAIR\" } ] ] } ],\n                [ { \"prim\": \"ITER\",\n                    \"args\":\n                      [ [ { \"prim\": \"IF_LEFT\",\n                            \"args\":\n                              [ [ { \"prim\": \"DUP\" }, { \"prim\": \"CDR\" },\n                                  { \"prim\": \"CDR\" },\n                                  { \"prim\": \"DIG\",\n                                    \"args\": [ { \"int\": \"4\" } ] },\n                                  { \"prim\": \"DUP\" },\n                                  { \"prim\": \"DUG\",\n                                    \"args\": [ { \"int\": \"5\" } ] },\n                                  { \"prim\": \"COMPARE\" }, { \"prim\": \"NEQ\" },\n                                  { \"prim\": \"IF\",\n                                    \"args\":\n                                      [ [ { \"prim\": \"PUSH\",\n                                            \"args\":\n                                              [ { \"prim\": \"string\" },\n                                                { \"string\":\n                                                    \"FA2_TOKEN_UNDEFINED\" } ] },\n                                          { \"prim\": \"FAILWITH\" } ], [] ] },\n                                  { \"prim\": \"DUP\" }, { \"prim\": \"CAR\" },\n                                  { \"prim\": \"SENDER\" },\n                                  { \"prim\": \"COMPARE\" }, { \"prim\": \"NEQ\" },\n                                  { \"prim\": \"IF\",\n                                    \"args\":\n                                      [ [ { \"prim\": \"PUSH\",\n                                            \"args\":\n                                              [ { \"prim\": \"string\" },\n                                                { \"string\": \"FA2_NOT_OWNER\" } ] },\n                                          { \"prim\": \"FAILWITH\" } ], [] ] },\n                                  { \"prim\": \"SWAP\" }, { \"prim\": \"DUP\" },\n                                  { \"prim\": \"DUG\",\n                                    \"args\": [ { \"int\": \"2\" } ] },\n                                  { \"prim\": \"SWAP\" }, { \"prim\": \"DUP\" },\n                                  { \"prim\": \"DUG\",\n                                    \"args\": [ { \"int\": \"2\" } ] },\n                                  { \"prim\": \"CAR\" }, { \"prim\": \"PAIR\" },\n                                  { \"prim\": \"DIG\",\n                                    \"args\": [ { \"int\": \"3\" } ] },\n                                  { \"prim\": \"DUP\" },\n                                  { \"prim\": \"DUG\",\n                                    \"args\": [ { \"int\": \"4\" } ] },\n                                  { \"prim\": \"SWAP\" }, { \"prim\": \"EXEC\" },\n                                  { \"prim\": \"DIG\",\n                                    \"args\": [ { \"int\": \"2\" } ] },\n                                  { \"prim\": \"DUP\" },\n                                  { \"prim\": \"DUG\",\n                                    \"args\": [ { \"int\": \"3\" } ] },\n                                  { \"prim\": \"CDR\" },\n                                  { \"prim\": \"DIG\",\n                                    \"args\": [ { \"int\": \"3\" } ] },\n                                  { \"prim\": \"DUP\" },\n                                  { \"prim\": \"DUG\",\n                                    \"args\": [ { \"int\": \"4\" } ] },\n                                  { \"prim\": \"CAR\" }, { \"prim\": \"CDR\" },\n                                  { \"prim\": \"DIG\",\n                                    \"args\": [ { \"int\": \"4\" } ] },\n                                  { \"prim\": \"CAR\" }, { \"prim\": \"CAR\" },\n                                  { \"prim\": \"DIG\",\n                                    \"args\": [ { \"int\": \"3\" } ] },\n                                  { \"prim\": \"DUP\" },\n                                  { \"prim\": \"DUG\",\n                                    \"args\": [ { \"int\": \"4\" } ] },\n                                  { \"prim\": \"CDR\" },\n                                  { \"prim\": \"DIG\",\n                                    \"args\": [ { \"int\": \"4\" } ] },\n                                  { \"prim\": \"CAR\" },\n                                  { \"prim\": \"DIG\",\n                                    \"args\": [ { \"int\": \"5\" } ] },\n                                  { \"prim\": \"DUP\" },\n                                  { \"prim\": \"DUG\",\n                                    \"args\": [ { \"int\": \"6\" } ] },\n                                  { \"prim\": \"CDR\" }, { \"prim\": \"CAR\" },\n                                  { \"prim\": \"PUSH\",\n                                    \"args\":\n                                      [ { \"prim\": \"bool\" },\n                                        { \"prim\": \"True\" } ] },\n                                  { \"prim\": \"SWAP\" }, { \"prim\": \"UPDATE\" },\n                                  { \"prim\": \"PAIR\" },\n                                  { \"prim\": \"DIG\",\n                                    \"args\": [ { \"int\": \"4\" } ] },\n                                  { \"prim\": \"CAR\" }, { \"prim\": \"SWAP\" },\n                                  { \"prim\": \"SOME\" }, { \"prim\": \"SWAP\" },\n                                  { \"prim\": \"UPDATE\" }, { \"prim\": \"PAIR\" },\n                                  { \"prim\": \"PAIR\" } ],\n                                [ { \"prim\": \"DUP\" }, { \"prim\": \"CDR\" },\n                                  { \"prim\": \"CDR\" },\n                                  { \"prim\": \"DIG\",\n                                    \"args\": [ { \"int\": \"4\" } ] },\n                                  { \"prim\": \"DUP\" },\n                                  { \"prim\": \"DUG\",\n                                    \"args\": [ { \"int\": \"5\" } ] },\n                                  { \"prim\": \"COMPARE\" }, { \"prim\": \"NEQ\" },\n                                  { \"prim\": \"IF\",\n                                    \"args\":\n                                      [ [ { \"prim\": \"PUSH\",\n                                            \"args\":\n                                              [ { \"prim\": \"string\" },\n                                                { \"string\":\n                                                    \"FA2_TOKEN_UNDEFINED\" } ] },\n                                          { \"prim\": \"FAILWITH\" } ], [] ] },\n                                  { \"prim\": \"DUP\" }, { \"prim\": \"CAR\" },\n                                  { \"prim\": \"SENDER\" },\n                                  { \"prim\": \"COMPARE\" }, { \"prim\": \"NEQ\" },\n                                  { \"prim\": \"IF\",\n                                    \"args\":\n                                      [ [ { \"prim\": \"PUSH\",\n                                            \"args\":\n                                              [ { \"prim\": \"string\" },\n                                                { \"string\": \"FA2_NOT_OWNER\" } ] },\n                                          { \"prim\": \"FAILWITH\" } ], [] ] },\n                                  { \"prim\": \"SWAP\" }, { \"prim\": \"DUP\" },\n                                  { \"prim\": \"DUG\",\n                                    \"args\": [ { \"int\": \"2\" } ] },\n                                  { \"prim\": \"SWAP\" }, { \"prim\": \"DUP\" },\n                                  { \"prim\": \"DUG\",\n                                    \"args\": [ { \"int\": \"2\" } ] },\n                                  { \"prim\": \"CAR\" }, { \"prim\": \"PAIR\" },\n                                  { \"prim\": \"DIG\",\n                                    \"args\": [ { \"int\": \"3\" } ] },\n                                  { \"prim\": \"DUP\" },\n                                  { \"prim\": \"DUG\",\n                                    \"args\": [ { \"int\": \"4\" } ] },\n                                  { \"prim\": \"SWAP\" }, { \"prim\": \"EXEC\" },\n                                  { \"prim\": \"DIG\",\n                                    \"args\": [ { \"int\": \"2\" } ] },\n                                  { \"prim\": \"DUP\" },\n                                  { \"prim\": \"DUG\",\n                                    \"args\": [ { \"int\": \"3\" } ] },\n                                  { \"prim\": \"CDR\" },\n                                  { \"prim\": \"DIG\",\n                                    \"args\": [ { \"int\": \"3\" } ] },\n                                  { \"prim\": \"DUP\" },\n                                  { \"prim\": \"DUG\",\n                                    \"args\": [ { \"int\": \"4\" } ] },\n                                  { \"prim\": \"CAR\" }, { \"prim\": \"CDR\" },\n                                  { \"prim\": \"DIG\",\n                                    \"args\": [ { \"int\": \"4\" } ] },\n                                  { \"prim\": \"CAR\" }, { \"prim\": \"CAR\" },\n                                  { \"prim\": \"DIG\",\n                                    \"args\": [ { \"int\": \"3\" } ] },\n                                  { \"prim\": \"DUP\" },\n                                  { \"prim\": \"DUG\",\n                                    \"args\": [ { \"int\": \"4\" } ] },\n                                  { \"prim\": \"CDR\" },\n                                  { \"prim\": \"DIG\",\n                                    \"args\": [ { \"int\": \"4\" } ] },\n                                  { \"prim\": \"CAR\" },\n                                  { \"prim\": \"DIG\",\n                                    \"args\": [ { \"int\": \"5\" } ] },\n                                  { \"prim\": \"DUP\" },\n                                  { \"prim\": \"DUG\",\n                                    \"args\": [ { \"int\": \"6\" } ] },\n                                  { \"prim\": \"CDR\" }, { \"prim\": \"CAR\" },\n                                  { \"prim\": \"PUSH\",\n                                    \"args\":\n                                      [ { \"prim\": \"bool\" },\n                                        { \"prim\": \"False\" } ] },\n                                  { \"prim\": \"SWAP\" }, { \"prim\": \"UPDATE\" },\n                                  { \"prim\": \"PAIR\" },\n                                  { \"prim\": \"DIG\",\n                                    \"args\": [ { \"int\": \"4\" } ] },\n                                  { \"prim\": \"CAR\" }, { \"prim\": \"SWAP\" },\n                                  { \"prim\": \"SOME\" }, { \"prim\": \"SWAP\" },\n                                  { \"prim\": \"UPDATE\" }, { \"prim\": \"PAIR\" },\n                                  { \"prim\": \"PAIR\" } ] ] } ] ] },\n                  { \"prim\": \"SWAP\" }, { \"prim\": \"DROP\" }, { \"prim\": \"SWAP\" },\n                  { \"prim\": \"DROP\" },\n                  { \"prim\": \"NIL\", \"args\": [ { \"prim\": \"operation\" } ] },\n                  { \"prim\": \"PAIR\" } ] ] } ] ] } ]",
  "source": "#include \"../partials/ITokenFA2.ligo\"\n\n(* Helper function to get account *)\nfunction get_account (const addr : address; const s : storage) : account is\n  case s.ledger[addr] of\n    None ->  record [\n      balance    = 0n;\n      allowances = (set [] : set (address));\n      ]\n    | Some(instance) -> instance\n  end;\n\n(* Perform transfers from one owner *)\nfunction iterate_transfer (const s : storage; const user_trx_params : transfer_param) : storage is\n  block {\n    (* Retrieve sender account from storage *)\n    const sender_account : account = get_account(user_trx_params.from_, s);\n\n    (* Check permissions *)\n    if user_trx_params.from_ = Tezos.sender or sender_account.allowances contains Tezos.sender then\n      skip\n    else failwith(\"FA2_NOT_OPERATOR\");\n\n    (* Perform single transfer *)\n    function make_transfer(const s : storage; const transfer : transfer_destination) : storage is\n      block {\n        (* Token id check *)\n        if default_token_id =/= transfer.token_id then\n          failwith(\"FA2_TOKEN_UNDEFINED\")\n        else skip;\n\n        (* Balance check *)\n        if sender_account.balance < transfer.amount then\n          failwith(\"FA2_INSUFFICIENT_BALANCE\")\n        else skip;\n\n        (* Update sender balance *)\n        sender_account.balance := abs(sender_account.balance - transfer.amount);\n\n        (* Update storage *)\n        s.ledger[user_trx_params.from_] := sender_account;\n\n        (* Create or get destination account *)\n        var dest_account : account := get_account(transfer.to_, s);\n\n        (* Update destination balance *)\n        dest_account.balance := dest_account.balance + transfer.amount;\n\n        (* Update storage *)\n        s.ledger[transfer.to_] := dest_account;\n    } with s;\n} with (List.fold (make_transfer, user_trx_params.txs, s))\n\n(* Perform single operator update *)\nfunction iterate_update_operator (const s : storage; const params : update_operator_param) : storage is\n  block {\n    case params of\n    | Add_operator(param) -> {\n      (* Token id check *)\n      if default_token_id =/= param.token_id then\n        failwith(\"FA2_TOKEN_UNDEFINED\")\n      else skip;\n\n      (* Check an owner *)\n      if Tezos.sender =/= param.owner then\n        failwith(\"FA2_NOT_OWNER\")\n      else skip;\n\n      (* Create or get sender account *)\n      var sender_account : account := get_account(param.owner, s);\n\n      (* Set operator *)\n      sender_account.allowances := Set.add(param.operator, sender_account.allowances);\n\n      (* Update storage *)\n      s.ledger[param.owner] := sender_account;\n    }\n    | Remove_operator(param) -> {\n      (* Token id check *)\n      if default_token_id =/= param.token_id then\n        failwith(\"FA2_TOKEN_UNDEFINED\")\n      else skip;\n\n      (* Check an owner *)\n      if Tezos.sender =/= param.owner then\n        failwith(\"FA2_NOT_OWNER\")\n      else skip;\n\n      (* Create or get sender account *)\n      var sender_account : account := get_account(param.owner, s);\n\n      (* Set operator *)\n      sender_account.allowances := Set.remove(param.operator, sender_account.allowances);\n\n      (* Update storage *)\n      s.ledger[param.owner] := sender_account;\n    }\n    end\n  } with s\n\n(* Perform balance look up *)\nfunction get_balance_of (const balance_params : balance_params; const s : storage) : list(operation) is\n  block {\n\n    (* Perform single balance lookup *)\n    function look_up_balance(const l: list (balance_of_response); const request : balance_of_request) : list (balance_of_response) is\n      block {\n        (* Token id check *)\n        if default_token_id =/= request.token_id then\n          failwith(\"FA2_TOKEN_UNDEFINED\")\n        else skip;\n\n        (* Retrieve the asked account balance from storage *)\n        const sender_account : account = get_account(request.owner, s);\n\n        (* Form the response *)\n        const response : balance_of_response = record [\n          request   = request;\n          balance   = sender_account.balance;\n        ];\n      } with response # l;\n\n    (* Collect balances info *)\n    const accumulated_response : list (balance_of_response) = List.fold(look_up_balance, balance_params.requests, (nil: list(balance_of_response)));\n  } with list [transaction(accumulated_response, 0tz, balance_params.callback)]\n\n(* TokenFA2 - Mock FA2 token for tests *)\nfunction main (const action : token_action; var s : storage) : return is\n  block {\n    skip\n  } with case action of\n    | Transfer(params)                  -> ((nil : list (operation)), List.fold(iterate_transfer, params, s))\n    | Balance_of(params)                -> (get_balance_of(params, s), s)\n    | Update_operators(params)          -> ((nil : list (operation)), List.fold(iterate_update_operator, params, s))\n  end;\n",
  "sourcePath": "/root/tezos/quipuswap-core/contracts/main/TokenFA2.ligo",
  "compiler": {
    "name": "ligo",
    "version": "0.9.0"
  },
  "networks": {},
  "schemaVersion": "3.2.0-tezos.1",
  "updatedAt": "2022-10-06T09:34:38.993Z"
}